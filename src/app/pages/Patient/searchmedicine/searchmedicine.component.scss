// Glassmorphism
.glass-morphism {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}
.glass-morphism-dark {
  background: rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

// Animations
@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}
.animate-float {
  animation: float 3s ease-in-out infinite;
}

@keyframes shimmer {
  0% { background-position: -200px 0; }
  100% { background-position: calc(200px + 100%) 0; }
}
.animate-shimmer {
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  background-size: 200px 100%;
  animation: shimmer 2s infinite;
}

@keyframes slideInUp {
  from { opacity: 0; transform: translateY(30px); }
  to { opacity: 1; transform: translateY(0); }
}
.animate-slide-up {
  animation: slideInUp 0.6s ease-out;
}

@keyframes slideInLeft {
  from { opacity: 0; transform: translateX(-30px); }
  to { opacity: 1; transform: translateX(0); }
}
.animate-slide-left {
  animation: slideInLeft 0.6s ease-out;
}

@keyframes slideInRight {
  from { opacity: 0; transform: translateX(30px); }
  to { opacity: 1; transform: translateX(0); }
}
.animate-slide-right {
  animation: slideInRight 0.6s ease-out;
}

@keyframes pulse-glow {
  0%, 100% { box-shadow: 0 0 5px rgba(59, 130, 246, 0.4); }
  50% { box-shadow: 0 0 20px rgba(59, 130, 246, 0.6); }
}
.animate-pulse-glow {
  animation: pulse-glow 2s infinite;
}

// Staggered animation delays
.stagger-1 { animation-delay: 0.1s; }
.stagger-2 { animation-delay: 0.2s; }
.stagger-3 { animation-delay: 0.3s; }
.stagger-4 { animation-delay: 0.4s; }
.stagger-5 { animation-delay: 0.5s; }
.stagger-6 { animation-delay: 0.6s; }

// Enhanced hover effects
.hover-lift {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}
.hover-lift:hover {
  transform: translateY(-4px);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
}

.button-glow {
  transition: all 0.3s ease;
}
.button-glow:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 10px 30px rgba(34, 197, 94, 0.4);
}
.button-glow:active {
  transform: translateY(0);
}
.button-blue-glow:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 10px 30px rgba(59, 130, 246, 0.4);
}

// Custom scrollbar
::-webkit-scrollbar {
  width: 6px;
}
::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 3px;
}
::-webkit-scrollbar-thumb {
  background: rgba(59, 130, 246, 0.5);
  border-radius: 3px;
}
::-webkit-scrollbar-thumb:hover {
  background: rgba(59, 130, 246, 0.7);
}

select.appearance-none {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  background: none;
}

// Pharmacy card specific styles
.pharmacy-card {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  backface-visibility: hidden;
  transform-style: preserve-3d;
}

.pharmacy-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.15);
}

// Mobile responsive improvements
@media (max-width: 1024px) {
  // Make the left panel full width on mobile
  .lg\:col-span-1 {
    grid-column: span 1 / span 1;
  }
  
  .lg\:col-span-3 {
    grid-column: span 1 / span 1;
  }
  
  // Remove sticky positioning on mobile
  .sticky {
    position: relative;
    top: auto;
  }
}

@media (max-width: 768px) {
  .pharmacy-card {
    margin-bottom: 1rem;
  }
  
  .pharmacy-card:hover {
    transform: none;
  }
  
  // Improve touch targets on mobile
  button {
    min-height: 44px;
  }
  
  // Better spacing for mobile
  .space-y-4 > * + * {
    margin-top: 1rem;
  }
  
  .space-y-6 > * + * {
    margin-top: 1.5rem;
  }
  
  // Stack buttons vertically on mobile
  .grid-cols-1.sm\:grid-cols-2 {
    grid-template-columns: 1fr;
  }
  
  // Adjust header layout for mobile
  .flex.items-center.justify-between {
    flex-direction: column;
    gap: 1rem;
    text-align: center;
  }
  
  // Make the pharmacy count badge smaller on mobile
  .px-4.py-2 {
    padding: 0.5rem 1rem;
  }
}

// Focus states for accessibility
button:focus,
input:focus,
select:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

// Loading states
.loading {
  opacity: 0.7;
  pointer-events: none;
}

// Success states
.success {
  background-color: #f0fdf4;
  border-color: #22c55e;
}

// Error states
.error {
  background-color: #fef2f2;
  border-color: #ef4444;
}

// Form validation styles
.ng-invalid.ng-touched {
  border-color: #ef4444;
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
}

.ng-valid.ng-touched {
  border-color: #22c55e;
  box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
}
